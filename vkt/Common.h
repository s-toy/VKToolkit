#pragma once
#include "common/CommonMicro.h"
#include "common/UtilityInterface.h"

#define FORCE_ENABLE_DEBUG_UTILS

#if (defined(_DEBUG) || defined(DEBUG) || defined(FORCE_ENABLE_DEBUG_UTILS))
#	define _ENABLE_DEBUG_UTILS
#endif

#if (defined(_MSC_VER) || defined(__CYGWIN__) || defined(__MINGW32__))
#	define _WINDOWS
#endif

//TODO: some of these micros should be moved to hiveCommon

#define _OUTPUT_EVENT(e)			hiveUtility::hiveOutputEvent(e);
#define _OUTPUT_WARNING(e)			hiveUtility::hiveOutputWarning(__EXCEPTION_SITE__, (e));

#define _DISALLOW_COPY_AND_ASSIGN(TypeName) \
    TypeName(const TypeName &) = delete; \
    TypeName &operator =(const TypeName &) = delete;

namespace hiveVKT
{
	enum class EResult
	{
		SUCCESS = VK_SUCCESS,
		NOT_READY = VK_NOT_READY,
		TIMEOUT = VK_TIMEOUT,
		EVENT_SET = VK_EVENT_SET,
		EVENT_RESET = VK_EVENT_RESET,
		INCOMPLETE = VK_INCOMPLETE,
		ERROR_OUT_OF_HOST_MEMORY = VK_ERROR_OUT_OF_HOST_MEMORY,
		ERROR_OUT_OF_DEVICE_MEMORY = VK_ERROR_OUT_OF_DEVICE_MEMORY,
		ERROR_INITIALIZATION_FAILED = VK_ERROR_INITIALIZATION_FAILED,
		ERROR_DEVICE_LOST = VK_ERROR_DEVICE_LOST,
		ERROR_MEMORY_MAP_FAILED = VK_ERROR_MEMORY_MAP_FAILED,
		ERROR_LAYER_NOT_PRESENT = VK_ERROR_LAYER_NOT_PRESENT,
		ERROR_EXTENSION_NOT_PRESENT = VK_ERROR_EXTENSION_NOT_PRESENT,
		ERROR_FEATURE_NOT_PRESENT = VK_ERROR_FEATURE_NOT_PRESENT,
		ERROR_INCOMPATIBLE_DRIVER = VK_ERROR_INCOMPATIBLE_DRIVER,
		ERROR_TOO_MANY_OBJECTS = VK_ERROR_TOO_MANY_OBJECTS,
		ERROR_FORMAT_NOT_SUPPORTED = VK_ERROR_FORMAT_NOT_SUPPORTED,
		ERROR_FRAGMENTED_POOL = VK_ERROR_FRAGMENTED_POOL,
		ERROR_OUT_OF_POOL_MEMORY = VK_ERROR_OUT_OF_POOL_MEMORY,
		ERROR_OUT_OF_POOL_MEMORY = VK_ERROR_OUT_OF_POOL_MEMORY,
		ERROR_INVALID_EXTERNAL_HANDLE = VK_ERROR_INVALID_EXTERNAL_HANDLE,
		ERROR_INVALID_EXTERNAL_HANDLE = VK_ERROR_INVALID_EXTERNAL_HANDLE,
		ERROR_SURFACE_LOST_KHR = VK_ERROR_SURFACE_LOST_KHR,
		ERROR_NATIVE_WINDOW_IN_USE_KHR = VK_ERROR_NATIVE_WINDOW_IN_USE_KHR,
		SUBOPTIMAL_KHR = VK_SUBOPTIMAL_KHR,
		ERROR_OUT_OF_DATE_KHR = VK_ERROR_OUT_OF_DATE_KHR,
		ERROR_INCOMPATIBLE_DISPLAY_KHR = VK_ERROR_INCOMPATIBLE_DISPLAY_KHR,
		ERROR_VALIDATION_FAILED_EXT = VK_ERROR_VALIDATION_FAILED_EXT,
		ERROR_INVALID_SHADER_NV = VK_ERROR_INVALID_SHADER_NV,
		ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT = VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT,
		ERROR_FRAGMENTATION_EXT = VK_ERROR_FRAGMENTATION_EXT,
		ERROR_NOT_PERMITTED_EXT = VK_ERROR_NOT_PERMITTED_EXT,
		ERROR_INVALID_DEVICE_ADDRESS_EXT = VK_ERROR_INVALID_DEVICE_ADDRESS_EXT,
		
		ERROR_INVALID_PARAMETERS
	};
}